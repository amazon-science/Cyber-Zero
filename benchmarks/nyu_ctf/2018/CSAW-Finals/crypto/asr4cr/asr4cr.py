import socket

secret_flag = "RSA{FIRST_ROUND_WAS_NOT_TOO_BAD}"
real_flag = "FLAG{RC4_I3_D3AD_BUT_1T_1S_G00D_T0_KN0W}"

msg1 = "FAKE{LC5_I3_SH0RT}"

msg2 = "FAKE{LC5_I3_FAK3_BUT_1T_1S_G00D_T0_KN0W}"

key = "RC4_IS_NOT_LEET_AT_ALL_DO_NOT_USE_IT!!!!"

key_arr = [ord(i) for i in key]

#RC4
def KSA(key):
    arr = range(256)

    k = 0
    for z in range(256):
        k = (k+arr[z]+key[z % len(key)]) % 256
        temp = arr[z]
        arr[z] = arr[k]
        arr[k] = temp

    return arr

def PRGA(ks):
    i = 0
    j = 0
    while True:
        i = (i + 1) % 256
        j = (j + ks[i]) % 256
        ks[i],ks[j] = ks[j],ks[i]
        yield ks[(ks[i] + ks[j]) % 256]


def encrypt(msg,stream):
    return [ord(i) ^ next(stream) for i in msg]


#RSA
m = int("0x"+secret_flag.encode('hex'),16)

c = 45532901824779701378231663264317691918332830832727980686741777650350897654972731931906126487183695081149779754337211259576173166293099080026360210494238959275834930884772828914504790990220112618808803618718921284861471408452351387148489569208903847288964821402052254148148283550521299399412532966770835208456058835316550638049581681130969595007241458911654151363153992694300910445899304425484918330492562481928441188111780684754432851810943390386788371370446571697596730749234374112810876064553895009312729747803267970163376377525012371123934730259190839294187981333459364290514186662847699605450828212079377654174428

e = 56464345445116249098049045336807445234357883929066056160509800851174255932943697111857107660018784212036377880810894047380656549383278972198516300670834705016468999714250951486912600249341791051961539477938043350992976556533909606031953927579029664976360355357096884954199433767448339255264831657804069495212007831723081630922243488700092552780963937083647566868158843349870118898134140101603936510785879524001693384328179832659722334742169456879889671271238721506778301709871337885442564361586631293011137834137912109208181348656281720720627766394041913283080319450233438914935475856576320213363102937394294033243533

n = 144731657075172369458365253117444692939543043921858848859103787081029935571261433965575780267889126491908228025197396050544630151378291212236766311668806004054369644769305000545793583915353079764667366200180574291376348069728516020997330701012031222049248560650540529425983462590552767265793268609531384242005329075143421408062869554263876675060033088763864236117044254825364969220914682084657647653707895098928730418682497939953647008736234172764734833411879279956351555928480516439340800516536708422230087334841118192814828087714947355712947595518081579349585938062548316427420775872732829914145491413512568074735861


enc1 = encrypt(real_flag,PRGA(KSA(key_arr)))
enc2 = encrypt(msg1,PRGA(KSA(key_arr)))
enc3 = encrypt(msg2,PRGA(KSA(key_arr)))

s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
s.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)
s.bind(('0.0.0.0', 4141))
s.listen(10)

while True:
    ss, addr = s.accept()
    while True:
        
        ss.send("Passwd\n")
        ss.send(">>")
        
        data = ss.recv(0x1024).strip("\n")

        if data == secret_flag:
            ss.send("Fake Msg: %s\n" % (msg2))
            ss.send("C1: %s\n" % (enc1))
            ss.send("C2: %s\n" % (enc3))
            break
        else:
            ss.send("Fake Msg: %s\n" % (msg1))
            ss.send("C1: %s\n" % (enc1))
            ss.send("C2: %s\n" % (enc2))
            break
        ss.close()



